{"version":3,"sources":["key.js","App.js","reportWebVitals.js","index.js"],"names":["process","SPOONACULAR_API_KEY","App","query","setQuery","useState","recipes","setRecipes","isLoading","setIsLoading","error","setError","currentPage","setCurrentPage","recipesPerPage","selectedCuisine","setSelectedCuisine","totalResults","setTotalResults","totalPages","setTotalPages","useEffect","getRecipes","url","async","result","Axios","get","data","results","Math","ceil","console","React","createElement","className","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","label","map","cuisine","key","recipe","id","src","image","alt","title","onClick","prev","max","disabled","length","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.9bc40e33.chunk.js","sourcesContent":["const API_KEY = process.env.SPOONACULAR_API_KEY;","import \"./key\";\nimport \"./App.css\";\nimport React, { useState, useEffect } from 'react';\nimport Axios from \"axios\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [recipes, setRecipes] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [recipesPerPage] = useState(5);\n  const [selectedCuisine, setSelectedCuisine] = useState(\"\");\n  const [totalResults, setTotalResults] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const cuisines = [\n    { label: \"African\", value: \"African\" },\n    { label: \"Asian\", value: \"Asian\" },\n    { label: \"American\", value: \"American\" },\n    { label: \"British\", value: \"British\" },\n    { label: \"Cajun\", value: \"Cajun\" },\n    { label: \"Caribbean\", value: \"Caribbean\" },\n    { label: \"Chinese\", value: \"Chinese\" },\n    { label: \"Eastern European\", value: \"Eastern European\" },\n    { label: \"European\", value: \"European\" },\n    { label: \"French\", value: \"French\" },\n    { label: \"German\", value: \"German\" },\n    { label: \"Greek\", value: \"Greek\" },\n    { label: \"Indian\", value: \"Indian\" },\n    { label: \"Irish\", value: \"Irish\" },\n    { label: \"Italian\", value: \"Italian\" },\n    { label: \"Japanese\", value: \"Japanese\" },\n    { label: \"Jewish\", value: \"Jewish\" },\n    { label: \"Korean\", value: \"Korean\" },\n    { label: \"Latin American\", value: \"Latin American\" },\n    { label: \"Mediterranean\", value: \"Mediterranean\" },\n    { label: \"Mexican\", value: \"Mexican\" },\n    { label: \"Middle Eastern\", value: \"Middle Eastern\" },\n    { label: \"Nordic\", value: \"Nordic\" },\n    { label: \"Southern\", value: \"Southern\" },\n    { label: \"Spanish\", value: \"Spanish\" },\n    { label: \"Thai\", value: \"Thai\" },\n    { label: \"Vietnamese\", value: \"Vietnamese\" },\n  ];\n\n  useEffect(() => {\n    getRecipes();\n  }, [currentPage, selectedCuisine]);\n\n  const API_KEY = \"3beb197c9690416e8301673e7a94b78d\";\n  var url = `https://api.spoonacular.com/recipes/complexSearch?apiKey=${API_KEY}${query ? `&query=${query}` : ''}&number=${recipesPerPage}&offset=${(currentPage - 1) * recipesPerPage}${selectedCuisine ? `&cuisine=${selectedCuisine}` : ''}`;\n\nconst getRecipes = async () => {\n  setIsLoading(true);\n  setError(null);\n  try {\n    const result = await Axios.get(url);\n    if(result.data && result.data.results) {\n      setRecipes(result.data.results);\n      setTotalResults(result.data.totalResults);\n      setTotalPages(Math.ceil(result.data.totalResults / recipesPerPage));\n    } else {\n      setRecipes([]);\n      setTotalResults(0);\n      setTotalPages(0);\n    }\n  } catch (error) {\n    setError('Failed to fetch recipes');\n    console.error('Error fetching recipes', error);\n  } finally {\n    setIsLoading(false);\n  }\n};\n\n\nconst onSubmit = (e) => {\n  e.preventDefault();\n  setCurrentPage(1);\n  getRecipes(); \n};\n\n\n  return (\n    <div className=\"app\">\n      <h1>Recipe Website</h1>\n      <form className=\"app__searchForm\" onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          className=\"app__input\"\n          placeholder=\"Enter ingredient\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <select\n          value={selectedCuisine}\n          onChange={(e) => setSelectedCuisine(e.target.value)}\n          className=\"app__cuisineSelect\"\n        >\n          <option value=\"\">All Cuisines</option>\n          {cuisines.map((cuisine) => (\n            <option key={cuisine.value} value={cuisine.value}>\n              {cuisine.label}\n            </option>\n          ))}\n        </select>\n        <input className=\"app__submit\" type=\"submit\" value=\"Search\" />\n      </form>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      <div className=\"app__recipes\">\n        {recipes.map((recipe) => (\n          <div key={recipe.id}>\n            \n            <img\n              className=\"recipe__image\"\n              src={recipe.image}\n              alt={recipe.title}\n            />\n            <h6 className=\"recipe__name\">{recipe.title}</h6>\n          </div>\n        ))}\n      </div>\n      <div className=\"pagination-info\">\n        <p>\n          Page {currentPage} of {totalPages}\n        </p>\n        <p>Total Results: {totalResults}</p>\n      </div>\n      <div className=\"pagination\">\n        <button\n          onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\n          disabled={currentPage === 1}\n        >\n          Prev\n        </button>\n        <button\n          onClick={() => setCurrentPage((prev) => prev + 1)}\n          disabled={recipes.length < recipesPerPage}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}