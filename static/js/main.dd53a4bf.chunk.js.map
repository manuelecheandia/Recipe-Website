{"version":3,"sources":["components/SearchBar.js","components/RecipeDetail.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","query","setQuery","useState","recipes","setRecipes","navigate","useNavigate","searchRecipes","async","result","axios","get","params","apiKey","data","results","React","createElement","type","value","onChange","e","target","onKeyPress","key","onClick","map","recipe","id","src","image","alt","title","RecipeDetail","useParams","setRecipe","useEffect","fetchRecipe","vegan","dairyFree","extendedIngredients","ingredient","name","amount","unit","instructions","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"qRAsCeA,MAlCf,WACE,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAASC,GAAcF,mBAAS,IACjCG,EAAWC,cAEXC,EAAgBC,UACpB,MAAMC,QAAeC,IAAMC,IAAI,oDAAqD,CAClFC,OAAQ,CACNC,OAAQ,mCACRb,MAAOA,KAGXI,EAAWK,EAAOK,KAAKC,UAGzB,OACEC,IAAAC,cAAA,WACED,IAAAC,cAAA,SACEC,KAAK,OACLC,MAAOnB,EACPoB,SAAWC,GAAMpB,EAASoB,EAAEC,OAAOH,OACnCI,WAAaF,GAAgB,UAAVA,EAAEG,KAAmBjB,MAE1CS,IAAAC,cAAA,UAAQQ,QAASlB,GAAe,UAC/BJ,EAAQuB,IAAIC,GACXX,IAAAC,cAAA,OAAKO,IAAKG,EAAOC,GAAIH,QAASA,IAAMpB,EAAS,WAAWsB,EAAOC,KAC7DZ,IAAAC,cAAA,OAAKY,IAAKF,EAAOG,MAAOC,IAAKJ,EAAOK,QACpChB,IAAAC,cAAA,SAAIU,EAAOK,WCUNC,MArCf,WACE,MAAM,GAAEL,GAAOM,eACRP,EAAQQ,GAAajC,mBAAS,MAerC,OAbAkC,oBAAU,KACY5B,WAClB,MAAMC,QAAeC,IAAMC,IAAI,uCAAuCiB,gBAAkB,CACtFhB,OAAQ,CACNC,OAAQ,sCAGZsB,EAAU1B,EAAOK,OAGnBuB,IACC,CAACT,IAECD,EAGHX,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAKU,EAAOK,OACZhB,IAAAC,cAAA,OAAKY,IAAKF,EAAOG,MAAOC,IAAKJ,EAAOK,QACpChB,IAAAC,cAAA,SAAG,UAAQU,EAAOW,MAAQ,MAAQ,MAClCtB,IAAAC,cAAA,SAAG,eAAaU,EAAOY,UAAY,MAAQ,MAC3CvB,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,UACGU,EAAOa,oBAAoBd,IAAIe,GAC9BzB,IAAAC,cAAA,MAAIO,IAAKiB,EAAWb,IAAKa,EAAWC,KAAK,MAAID,EAAWE,OAAO,IAAEF,EAAWG,QAGhF5B,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,SAAIU,EAAOkB,eAfK7B,IAAAC,cAAA,WAAK,eCJZ6B,MAXf,WACE,OACE9B,IAAAC,cAAC8B,IAAM,KACL/B,IAAAC,cAAC+B,IAAM,KACLhC,IAAAC,cAACgC,IAAK,CAACC,KAAK,IAAIC,QAASnC,IAAAC,cAAClB,EAAS,QACnCiB,IAAAC,cAACgC,IAAK,CAACC,KAAK,cAAcC,QAASnC,IAAAC,cAACgB,EAAY,WCCzCmB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlD,IAAAC,cAACD,IAAMmD,WAAU,KACfnD,IAAAC,cAAC6B,EAAG,QAORM,M","file":"static/js/main.dd53a4bf.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction SearchBar() {\r\n  const [query, setQuery] = useState('');\r\n  const [recipes, setRecipes] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const searchRecipes = async () => {\r\n    const result = await axios.get(`https://api.spoonacular.com/recipes/complexSearch`, {\r\n      params: {\r\n        apiKey: '3beb197c9690416e8301673e7a94b78d', \r\n        query: query\r\n      }\r\n    });\r\n    setRecipes(result.data.results);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        onKeyPress={(e) => e.key === 'Enter' && searchRecipes()}\r\n      />\r\n      <button onClick={searchRecipes}>Search</button>\r\n      {recipes.map(recipe => (\r\n        <div key={recipe.id} onClick={() => navigate(`/recipe/${recipe.id}`)}>\r\n          <img src={recipe.image} alt={recipe.title} />\r\n          <p>{recipe.title}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction RecipeDetail() {\r\n  const { id } = useParams();\r\n  const [recipe, setRecipe] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchRecipe = async () => {\r\n      const result = await axios.get(`https://api.spoonacular.com/recipes/${id}/information`, {\r\n        params: {\r\n          apiKey: '3beb197c9690416e8301673e7a94b78d' \r\n        }\r\n      });\r\n      setRecipe(result.data);\r\n    };\r\n\r\n    fetchRecipe();\r\n  }, [id]);\r\n\r\n  if (!recipe) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>{recipe.title}</h1>\r\n      <img src={recipe.image} alt={recipe.title} />\r\n      <p>Vegan: {recipe.vegan ? 'Yes' : 'No'}</p>\r\n      <p>Dairy-free: {recipe.dairyFree ? 'Yes' : 'No'}</p>\r\n      <h2>Ingredients</h2>\r\n      <ul>\r\n        {recipe.extendedIngredients.map(ingredient => (\r\n          <li key={ingredient.id}>{ingredient.name} - {ingredient.amount} {ingredient.unit}</li>\r\n        ))}\r\n      </ul>\r\n      <h2>Instructions</h2>\r\n      <p>{recipe.instructions}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipeDetail;\r\n","import './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport SearchBar from './components/SearchBar';\nimport RecipeDetail from './components/RecipeDetail';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<SearchBar />} />\n        <Route path=\"/recipe/:id\" element={<RecipeDetail />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}